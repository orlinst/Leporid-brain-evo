grp<-as.factor(Data$Diurnality)
relHipp<-as.numeric(res)
names(grp)=rownames(Data)
names(relHipp)=rownames(Data)
x1=aov.phylo(relHipp ~ grp,
TreePrimate, nsim = 1000)
plot(relHipp~grp, main = 'Title')
grp<-as.factor(Data$Soc_sys_dec)
relHipp<-as.numeric(res)
names(grp)=rownames(Data)
names(relHipp)=rownames(Data)
x1=aov.phylo(relHipp ~ grp,
TreePrimate, nsim = 1000)
plot(relHipp~grp, main = 'Title')
grp<-as.factor(Data$Mat_sys_dec)
relHipp<-as.numeric(res)
names(grp)=rownames(Data)
names(relHipp)=rownames(Data)
x1=aov.phylo(relHipp ~ grp,
TreePrimate, nsim = 1000)
plot(relHipp~grp, main = 'Title')
grp<-as.factor(Data$Mat_sys_dec)
relHipp<-as.numeric(Hippocampus)
names(grp)=rownames(Data)
names(relHipp)=rownames(Data)
x1=aov.phylo(relHipp ~ grp,
TreePrimate, nsim = 1000)
plot(relHipp~grp, main = 'Title')
relHipp<-as.numeric(Terrestriality)
grp<-as.factor(Data$Mat_sys_dec)
relHipp<-as.numeric(Terrestriality)
names(grp)=rownames(Data)
grp<-as.factor(Data$Terrestriality)
relHipp<-as.numeric(Hippocampus)
names(grp)=rownames(Data)
names(relHipp)=rownames(Data)
x1=aov.phylo(relHipp ~ grp,
TreePrimate, nsim = 1000)
grp<-as.factor(Data$Terrestriality)
relHipp<-as.numeric(Hippocampus)
names(grp)=rownames(Data)
names(relHipp)=rownames(Data)
x1=aov.phylo(relHipp ~ grp,
TreePrimate, nsim = 1000)
plot(relHipp~grp, main = 'Title')
grp<-as.factor(Data$Diurnality)
relHipp<-as.numeric(Hippocampus)
names(grp)=rownames(Data)
names(relHipp)=rownames(Data)
x1=aov.phylo(relHipp ~ grp,
TreePrimate, nsim = 1000)
plot(relHipp~grp, main = 'Title')
grp<-as.factor(Data$Terrestriality)
relHipp<-as.numeric(Hippocampus)
names(grp)=rownames(Data)
names(relHipp)=rownames(Data)
x1=aov.phylo(relHipp ~ grp,
TreePrimate, nsim = 1000)
plot(relHipp~grp, main = 'Title')
grp<-as.factor(Data$Soc_sys_dec)
relHipp<-as.numeric(Hippocampus)
names(grp)=rownames(Data)
names(relHipp)=rownames(Data)
x1=aov.phylo(relHipp ~ grp,
TreePrimate, nsim = 1000)
plot(relHipp~grp, main = 'Title')
plot(Data$res)
hist(Data$res)
model.pgls<-pgls(log(Hippocampus.total) ~ X.Fruit*log(Brainvol), data = primate, lambda='ML')
summary(model.pgls)
model.pgls<-pgls(log(HP.HS.fibers) ~ X.Fruit*log(Brainvol), data = primate, lambda='ML')
summary(model.pgls)
model.pgls<-pgls(log(Hippocampus.retrocomm.) ~ X.Fruit*log(Brainvol), data = primate, lambda='ML')
summary(model.pgls)
model.pgls<-pgls(log(Subi.culum) ~ X.Fruit*log(Brainvol), data = primate, lambda='ML')
summary(model.pgls)
model.pgls<-pgls(log(Hilus) ~ X.Fruit*log(Brainvol), data = primate, lambda='ML')
summary(model.pgls)
model.pgls<-pgls(log(CA3) ~ X.Fruit*log(Brainvol), data = primate, lambda='ML')
summary(model.pgls)
Data1=read.csv("dimorphdata.csv", header=TRUE)
row.names(Data1)=Data1$Species
TreeDimorph=read.tree("dimorphdata.txt")
plot(TreeDimorph, cex=0.5)
primate1 <- comparative.data(phy = TreeDimorph, data = Data1, names.col = Species, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model.pgls<-pgls(log(BoW) ~ log(SCH), data = primate1, lambda='ML')
summary(model.pgls)
require(phytools)
tree.mammal <-read.tree("tree.nwk")
tree.blind <-read.tree("speciesblind.nwk")
acuity<-read.csv("acuity.csv",row.names=1)
acuity.blind<-read.csv("acuityblind.csv",row.names=1)
acuity.blind<-read.csv("acuityblind.csv",row.names=1)
fit<-fastAnc(tree.mammal,acuity,vars=TRUE,CI=TRUE)
require(phytools)
tree.mammal <-read.tree("tree.nwk")
tree.blind <-read.tree("speciesblind.nwk")
acuity<-read.csv("acuity.csv",row.names=1)
acuity.blind<-read.csv("acuityblind.csv",row.names=1)
fit<-fastAnc(tree.mammal,acuity,vars=TRUE,CI=TRUE)
require(dispRity)
clean.data(acuity, tree.mammal)
clean.data(acuity, tree.mammal)
clean.data(acuity.blind, tree.blind)
fit<-fastAnc(tree.mammal,acuity,vars=TRUE,CI=TRUE)
clean.data(acuity.blind, tree.blind)
fit.blind<-fastAnc(tree.blind,acuity.blind,vars=TRUE,CI=TRUE)
fit<-fastAnc(tree.mammal,acuity,vars=TRUE,CI=TRUE)
require(phytools)
require(dispRity)
tree.mammal <-read.tree("tree.nwk")
tree.blind <-read.tree("speciesblind.nwk")
acuity<-read.csv("acuity.csv",row.names=1)
acuity.blind<-read.csv("acuityblind.csv",row.names=1)
clean.data(acuity, tree.mammal)
clean.data(acuity.blind, tree.blind)
anc<-fastAnc(tree.mammal,acuity,vars=TRUE,CI=TRUE, REML = 1)
View(acuity)
View(acuity.blind)
View(acuity)
View(acuity.blind)
View(acuity)
View(acuity)
require(phytools)
require(dispRity)
tree.mammal <-read.tree("tree.nwk")
tree.blind <-read.tree("speciesblind.nwk")
acuity<-read.csv("acuity.csv",row.names=1)
acuity.blind<-read.csv("acuityblind.csv",row.names=1)
clean.data(acuity, tree.mammal)
clean.data(acuity.blind, tree.blind)
anc<-fastAnc(tree.mammal,acuity,vars=TRUE,CI=TRUE, REML = 1)
View(acuity)
tree.mammal <-read.tree("tree.nwk")
tree.blind <-read.tree("speciesblind.nwk")
anc.blind<-fastAnc(tree.blind,acuity.blind,vars=TRUE,CI=TRUE)
acuity<-read.csv("acuity.csv")
View(acuity)
acuity<-read.csv("acuity.csv")
rownames(acuity) <- acuity$Species
View(acuity)
anc<-fastAnc(tree.mammal,acuity$VA,vars=TRUE,CI=TRUE, REML = 1)
anc.blind<-fastAnc(tree.blind,acuity.blind$VA,vars=TRUE,CI=TRUE)
require(phytools)
require(dispRity)
tree.mammal <-read.tree("tree.nwk")
tree.blind <-read.tree("speciesblind.nwk")
acuity<-read.csv("acuity.csv", row.names=1)
acuity.blind<-read.csv("acuityblind.csv",row.names=1)
clean.data(acuity, tree.mammal)
clean.data(acuity.blind, tree.blind)
anc<-fastAnc(tree.mammal,acuity$VA,vars=TRUE,CI=TRUE, REML = 1)
anc.blind<-fastAnc(tree.blind,acuity.blind$VA,vars=TRUE,CI=TRUE)
fancyTree(tree.mammal,type="scattergram",X=as.matrix(acuity),A=as.matrix(anc),control=list(spin=FALSE),label="horizontal")
fancyTree(tree.blind,type="scattergram",X=as.matrix(acuity.blind),A=as.matrix(anc1),control=list(spin=FALSE),label="horizontal")
anc1<-fastAnc(tree.blind,acuity.blind$VA,vars=TRUE,CI=TRUE)
fancyTree(tree.blind,type="scattergram",X=as.matrix(acuity.blind),A=as.matrix(anc1),control=list(spin=FALSE),label="horizontal")
plot(tree.mammal,label.offset=5)
nodelabels(cex=anc$ace/5,pch=16)
plot(tree.mammal,label.offset=5)
nodelabels(cex=anc$ace/5,pch=16)
anc
plot(tree.mammal)
nodelabels()
plot(tree.mammal,label.offset=5)
nodelabels(cex=anc$ace/5,pch=16)
tiplabels(cex=acuity$VA/70,pch=16)
plot(tree.mammal,label.offset=5)
nodelabels(text=anc$ace/5,pch=16)
tiplabels(cex=acuity$VA/70,pch=16)
plot(tree.mammal,label.offset=5)
nodelabels(text=anc$ace/50,pch=16)
tiplabels(cex=acuity$VA/70,pch=16)
plot(tree.mammal,label.offset=5)
nodelabels(cex=anc$ace/50,pch=16, piecol = rainbow)
tiplabels(cex=acuity$VA/70,pch=16)
plot(tree.mammal,label.offset=50)
nodelabels(cex=anc$ace/50,pch=16, piecol = rainbow)
tiplabels(cex=acuity$VA/70,pch=16)
plot(tree.mammal,label.offset=50, cex=0.5)
nodelabels(cex=anc$ace/50,pch=16, piecol = rainbow)
tiplabels(cex=acuity$VA/70,pch=16)
plot(tree.mammal,label.offset=5, cex= 0.7)
nodelabels(cex=anc$ace/20,pch=16)
tiplabels(cex=acuity$VA/70,pch=16)
plot(tree.mammal,label.offset=5, cex= 0.7)
nodelabels(cex=anc$ace/30,pch=16)
tiplabels(cex=acuity$VA/70,pch=16)
fancyTree(tree.mammal,type="scattergram",X=as.matrix(acuity),A=as.matrix(anc),control=list(spin=FALSE),label="horizontal")
fancyTree(tree.mammal,type="scattergram",X=as.matrix(acuity),A=as.matrix(anc),control=list(spin=FALSE),label="horizontal")
dev.off()
dev.off()
dev.off()
old.par <- par(mar = c(0, 0, 0, 0))
par(old.par)
plot(tree.mammal,label.offset=5, cex= 0.7)
nodelabels(cex=anc$ace/30,pch=16)
tiplabels(cex=acuity$VA/70,pch=16)
plot(tree.blind,label.offset=5, cex= 0.7)
nodelabels(cex=anc$ace1/30,pch=16)
tiplabels(cex=acuity.blind$VA/70,pch=16)
require(phytools)
require(dispRity)
tree.mammal <-read.tree("tree.nwk")
tree.blind <-read.tree("speciesblind.nwk")
acuity<-read.csv("acuity.csv", row.names=1)
acuity.blind<-read.csv("acuityblind.csv",row.names=1)
clean.data(acuity, tree.mammal)
clean.data(acuity.blind, tree.blind)
anc<-fastAnc(tree.mammal,acuity$VA,vars=TRUE,CI=TRUE, REML = 1)
anc1<-fastAnc(tree.blind,acuity.blind$VA,vars=TRUE,CI=TRUE)
fancyTree(tree.mammal,type="scattergram",X=as.matrix(acuity),A=as.matrix(anc),control=list(spin=FALSE),label="horizontal")
fancyTree(tree.blind,type="scattergram",X=as.matrix(acuity.blind),A=as.matrix(anc1),control=list(spin=FALSE),label="horizontal")
anc<-fastAnc(tree.mammal,acuity$VA,vars=TRUE,CI=TRUE, REML = 1)
anc1<-fastAnc(tree.blind,acuity.blind$VA,vars=TRUE,CI=TRUE)
fancyTree(tree.mammal,type="scattergram",X=as.matrix(acuity),A=as.matrix(anc),control=list(spin=FALSE),label="horizontal")
fancyTree(tree.blind,type="scattergram",X=as.matrix(acuity.blind),A=as.matrix(anc1),control=list(spin=FALSE),label="horizontal")
fancyTree(tree.mammal,type="scattergram",X=as.matrix(acuity),A=as.matrix(anc),control=list(spin=FALSE),label="horizontal", title = 'mammal')
fancyTree(tree.blind,type="scattergram",X=as.matrix(acuity.blind),A=as.matrix(anc1),control=list(spin=FALSE),label="horizontal")
fancyTree(tree.mammal,type="scattergram",X=as.matrix(acuity),A=as.matrix(anc),control=list(spin=FALSE),label="horizontal", main = 'mammal')
fancyTree(tree.blind,type="scattergram",X=as.matrix(acuity.blind),A=as.matrix(anc1),control=list(spin=FALSE),label="horizontal")
fancyTree(tree.mammal,type="traitgram3d",X=as.matrix(acuity),A=as.matrix(anc),control=list(spin=FALSE),label="horizontal", main = 'mammal')
obj<-contMap(tree.mammal,acuity$VA)
obj<-contMap(tree.mammal,acuity)
obj<-contMap(tree.mammal,acuity)
obj<-contMap(tree.mammal,acuity$VA)
obj<-contMap(tree.mammal,anc)
obj<-contMap(tree.mammal,anc$ace)
fit <- anc$ace
obj <- contMap(tree.mammal,fit)
require(phytools)
require(dispRity)
tree.mammal <-read.tree("tree.nwk")
tree.blind <-read.tree("speciesblind.nwk")
acuity<-read.csv("acuity.csv", row.names=1)
acuity.blind<-read.csv("acuityblind.csv",row.names=1)
clean.data(acuity, tree.mammal)
clean.data(acuity.blind, tree.blind)
anc<-fastAnc(tree.mammal,acuity$VA,vars=TRUE,CI=TRUE, REML = 1)
anc1<-fastAnc(tree.blind,acuity.blind$VA,vars=TRUE,CI=TRUE)
anc<-fastAnc(tree.mammal,acuity$VA,vars=TRUE,CI=TRUE, REML = 1)
anc1<-fastAnc(tree.blind,acuity.blind$VA,vars=TRUE,CI=TRUE, REML = 1)
anc<-fastAnc(tree.mammal,acuity$VA,vars=TRUE,CI=TRUE, REML = 1)
anc1<-fastAnc(tree.blind,acuity.blind$VA,vars=TRUE,CI=TRUE, REML = 1)
obj <- contMap(tree.mammal,fit)
obj <- contMap(tree.mammal, anc)
obj <- contMap(tree.mammal, anc$ace)
obj <- contMap(tree.mammal, anc$ace)
anc<-fastAnc(tree.mammal,acuity$VA,vars=TRUE,CI=TRUE, REML = 1)
fit <- anc$ace
obj <- contMap(tree.mammal, fit)
anc<-ace(acuity,tree.mammals,method="REML
anc<-ace(acuity,tree.mammals,method="REML)
anc <- ace(acuity,tree.mammals,method="REML")
anc <- ace(acuity,tree.mammal,method="REML")
anc <- ace(acuity$VA,tree.mammal,method="REML")
fit
obj <- contMap(tree.mammal, acuity$VA)
dat<-as.matrix(acuity)[,1]
obj<-contMap(tree.mammal,dat,fsize=c(0.6,1),outline=FALSE)
plot(obj,direction="leftwards")
dat<-as.matrix(anc$ace)[,1]
obj<-contMap(tree.mammal,dat,fsize=c(0.6,1),outline=FALSE)
dat<-as.matrix(acuity)[,1]
obj<-contMap(tree.mammal,dat,fsize=c(0.6,1),outline=FALSE)
plot(obj,direction="leftwards")
plotTree.wBars (tree.mammal, acuity$VA, type='fan', scale=0.002)
plotTree.wBars (tree.mammal, acuity$VA, type="fan", scale=0.002)
plotTree.wBars (tree.mammal, dat, type="fan", scale=0.002)
plotTree.wBars (tree.mammal, dat, type="fan", scale=0.002)
plotTree.wBars (tree.mammal, acuity, type="fan", scale=0.002)
plotTree.wBars (tree.mammal, acuity, type="fan", scale=0.002)
old.par <- par(mar = c(0, 0, 0, 0))
par(old.par)
plotTree.wBars (tree.mammal, acuity, type="fan", scale=0.002)
plotTree.wBars (obj$tree, acuity, type="fan", scale=0.002)
plotTree.wBars (obj$tree, dat, type="fan", scale=0.002)
plotTree.wBars (obj$tree, dat, method="plotSimmap",
tip.labels=TRUE,fsize=0.7,colors=obj$cols,type="fan",scale=0.002)
plotTree.wBars (obj$tree, dat, method="plotSimmap",
tip.labels=TRUE,fsize=0.7,colors=obj$cols,type="fan",scale=0.002)
add.color.bar(1.0,obj$cols,title="trait value",lims=obj$lims,prompt=FALSE,
x=0.9*par()$usr[1],y=0.9*par()$usr[3]))
plotTree.wBars (obj$tree, dat, method="plotSimmap",
tip.labels=TRUE,fsize=0.7,colors=obj$cols,type="fan",scale=0.002)
fancyTree(tree.mammal,type="scattergram",X=as.matrix(acuity),A=as.matrix(anc),control=list(spin=FALSE),label="horizontal")
fancyTree(tree.blind,type="scattergram",X=as.matrix(acuity.blind),A=as.matrix(anc1),control=list(spin=FALSE),label="horizontal")
#OR
dat<-as.matrix(acuity)[,1]
obj<-contMap(tree.mammal,dat,fsize=c(0.6,1),outline=FALSE)
plot(obj,direction="leftwards")
dat1<-as.matrix(acuity.blind)[,1]
obj1<-contMap(tree.blind,dat1,fsize=c(0.6,1),outline=FALSE)
plot(obj1,direction="leftwards")
old.par <- par(mar = c(0, 0, 0, 0))
par(old.par)
fancyTree(tree.mammal,type="scattergram",X=as.matrix(acuity),A=as.matrix(anc),control=list(spin=FALSE),label="horizontal")
fancyTree(tree.blind,type="scattergram",X=as.matrix(acuity.blind),A=as.matrix(anc1),control=list(spin=FALSE),label="horizontal")
#OR
dat<-as.matrix(acuity)[,1]
obj<-contMap(tree.mammal,dat,fsize=c(0.6,1),outline=FALSE)
plot(obj,direction="leftwards")
dat1<-as.matrix(acuity.blind)[,1]
obj1<-contMap(tree.blind,dat1,fsize=c(0.6,1),outline=FALSE)
plot(obj1,direction="leftwards")
#resetting the plot space
old.par <- par(mar = c(0, 0, 0, 0))
par(old.par)
plot(tree.mammal,label.offset=5, cex= 0.7)
nodelabels(cex=anc$ace/30,pch=16)
tiplabels(cex=acuity$VA/70,pch=16)
plot(tree.blind,label.offset=5, cex= 0.7)
nodelabels(cex=anc$ace1/30,pch=16)
tiplabels(cex=acuity.blind$VA/70,pch=16)
#resetting the plot space
old.par <- par(mar = c(0, 0, 0, 0))
par(old.par)
dev.off()
plot(tree.mammal,label.offset=5, cex= 0.7)
nodelabels(cex=anc$ace/30,pch=16)
tiplabels(cex=acuity$VA/70,pch=16)
plot(tree.blind,label.offset=5, cex= 0.7)
nodelabels(cex=anc$ace1/30,pch=16)
tiplabels(cex=acuity.blind$VA/70,pch=16)
fancyTree(tree.mammal,type="scattergram",X=as.matrix(acuity),A=as.matrix(anc),control=list(spin=FALSE),label="horizontal")
fancyTree(tree.blind,type="scattergram",X=as.matrix(acuity.blind),A=as.matrix(anc1),control=list(spin=FALSE),label="horizontal")
#OR
dat<-as.matrix(acuity)[,1]
obj<-contMap(tree.mammal,dat,fsize=c(0.6,1),outline=FALSE)
plot(obj,direction="leftwards")
dat1<-as.matrix(acuity.blind)[,1]
obj1<-contMap(tree.blind,dat1,fsize=c(0.6,1),outline=FALSE)
plot(obj1,direction="leftwards")
dev.off()
#resetting the plot space
plot(tree.mammal,label.offset=5, cex= 0.7)
nodelabels(cex=anc$ace/30,pch=16)
tiplabels(cex=acuity$VA/70,pch=16)
plot(tree.blind,label.offset=5, cex= 0.7)
nodelabels(cex=anc$ace1/30,pch=16)
tiplabels(cex=acuity.blind$VA/70,pch=16)
dev.off()
pdf(file="treemammal.pdf.pdf",width=10,height=10)
fancyTree(tree.mammal,type="scattergram",X=as.matrix(acuity),A=as.matrix(anc),control=list(spin=FALSE),label="horizontal")
dev.off()
pdf(file="treemammal1.pdf",width=10,height=10)
dat<-as.matrix(acuity)[,1]
obj<-contMap(tree.mammal,dat,fsize=c(0.6,1),outline=FALSE)
plot(obj,direction="leftwards")
dev.off()
require(phytools)
require(dispRity)
tree.mammal <-read.tree("tree.nwk")
tree.blind <-read.tree("speciesblind.nwk")
acuity<-read.csv("acuity.csv", row.names=1)
acuity.blind<-read.csv("acuityblind.csv",row.names=1)
clean.data(acuity, tree.mammal)
clean.data(acuity.blind, tree.blind)
anc<-fastAnc(tree.mammal,acuity$VA,vars=TRUE,CI=TRUE, REML = 1)
anc1<-fastAnc(tree.blind,acuity.blind$VA,vars=TRUE,CI=TRUE, REML = 1)
pdf(file="treemammal.pdf",width=10,height=10)
fancyTree(tree.mammal,type="scattergram",X=as.matrix(acuity),A=as.matrix(anc),control=list(spin=FALSE),label="horizontal")
dev.off()
pdf(file="treeblind.pdf",width=10,height=10)
fancyTree(tree.blind,type="scattergram",X=as.matrix(acuity.blind),A=as.matrix(anc1),control=list(spin=FALSE),label="horizontal")
dev.off()
#OR
pdf(file="treemammal1.pdf",width=10,height=10)
dat<-as.matrix(acuity)[,1]
obj<-contMap(tree.mammal,dat,fsize=c(0.6,1),outline=FALSE)
plot(obj,direction="leftwards")
dev.off()
pdf(file="treeblind1.pdf",width=10,height=10)
dat1<-as.matrix(acuity.blind)[,1]
obj1<-contMap(tree.blind,dat1,fsize=c(0.6,1),outline=FALSE)
plot(obj1,direction="leftwards")
dev.off()
#resetting the plot space
#old.par <- par(mar = c(0, 0, 0, 0))
#par(old.par)
pdf(file="treemammal2.pdf",width=10,height=10)
plot(tree.mammal,label.offset=5, cex= 0.7)
nodelabels(cex=anc$ace/30,pch=16)
tiplabels(cex=acuity$VA/70,pch=16)
dev.off()
pdf(file="treeblind2.pdf",width=10,height=10)
plot(tree.blind,label.offset=5, cex= 0.7)
nodelabels(cex=anc$ace1/30,pch=16)
tiplabels(cex=acuity.blind$VA/70,pch=16)
dev.off()
this.dir <- dirname(parent.frame(2)$ofile)
setwd(this.dir)
setwd("C:/Users/uqotodor_local/Dropbox/05. Github/Leporid-brain-evo/Data")
require(caper)
require(car)
require(plotly)
require(ggplot)
lepdata <-read.table("lepdata_trimmed2.csv", sep = ",", header = TRUE)
View(lepdata)
row.names(lepdata) <- lepdata$Name_phyl
View(lepdata)
View(lepdata)
leporid <- comparative.data(phy = leptree, data = lepdata, names.col = Name_phyl, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model.Se1<-pgls(log(ECV_OB) ~ log(SeT)*log(AdultBodyMass), data = leporid, lambda='ML')
leporid <- comparative.data(phy = leptree, data = lepdata, names.col = Name_phyl, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
leptree <-read.nexus("Matthee.nex")
l
row.names(lepdata) <- lepdata$Name_phyl
leporid <- comparative.data(phy = leptree, data = lepdata, names.col = Name_phyl, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model.Se1<-pgls(log(ECV_OB) ~ log(SeT)*log(AdultBodyMass), data = leporid, lambda='ML')
summary(model.Se1) # oB but not ROB or T (both absolute and relative work here!)
leptree <-read.nexus("Matthee.nex")
leporid <- comparative.data(phy = leptree, data = lepdata, names.col = Name_phyl, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
#or
leptree <-read.tree("leptree.txt")
leporid <- comparative.data(phy = leptree, data = lepdata, names.col = Name_phyl, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
model.Se1<-pgls(log(ECV_OB) ~ log(SeT)*log(AdultBodyMass), data = leporid, lambda='ML')
summary(model.Se1) # oB but not ROB or T (both absolute and relative work here!)
model.Se1<-pgls(log(ECV_OB) ~ log(SeT)+log(AdultBodyMass), data = leporid, lambda='ML')
summary(model.Se1) # oB but not ROB or T (both absolute and relative work here!)
model.Se1<-pgls(log(ECV_OB) ~ log(SeP)+log(AdultBodyMass), data = leporid, lambda='ML')
summary(model.Se1) # oB but not ROB or T (both absolute and relative work here!)
plot(model.Se)
model.Se2<-pgls(log(ECV_OB) ~ log(SeP)*log(AdultBodyMass), data = leporid, lambda='ML')
summary(model.Se1)
model.Se2<-pgls(log(ECV_T) ~ log(SeP)*log(AdultBodyMass), data = leporid, lambda='ML')
summary(model.Se1)
model.Se2<-pgls(log(ECV_T) ~ log(SeT)*log(AdultBodyMass), data = leporid, lambda='ML')
summary(model.Se1)
model.Se2<-pgls(log(ECV_T) ~ log(SeT)*log(SeP)*log(AdultBodyMass), data = leporid, lambda='ML')
summary(model.Se1)
summary(model.Se2)
model.Se2<-pgls(log(ECV_T) ~ log(SeT)*log(AdultBodyMass), data = leporid, lambda='ML')
summary(model.Se2)
model.Se2<-pgls(log(ECV_T) ~ log(SeT), data = leporid, lambda='ML')
summary(model.Se2)
model.pgls.res <- pgls(log(ECV_T) ~ log(AdultBodyMass), data = leporid, lambda='ML')
res <- model.pgls.res$res
model.Se2<-pgls(res ~ log(SeT), data = leporid, lambda='ML')
summary(model.Se2)
model.pgls.res.ob <- pgls(log(ECV_OB) ~ log(ECV_T), data = leporid, lambda='ML')
res.ob <- model.pgls.res.ob$res
model.Se2<-pgls(res.ob ~ log(SeT), data = leporid, lambda='ML')
summary(model.Se2)
model.Se2<-pgls(res.ob ~ log(SeP), data = leporid, lambda='ML')
summary(model.Se2)
model.Se2<-pgls(res.ob ~ log(SeP)+log(SeT), data = leporid, lambda='ML')
summary(model.Se2)
model.Se2<-pgls(res.ob ~ log(SeP)*log(SeT), data = leporid, lambda='ML')
summary(model.Se2)
model.GR<-pgls(log(ECV_T) ~ (log(GR_Area))*log(AdultBodyMass), data = leporid, lambda='ML')
summary(model.GR) # T and ROB but not OB or relative OB (Home Range NS) - I think nothing from here
mod.l <- pgls.profile(model.pgls, 'lambda')
pgls.profile(model.Se1, 'lambda')
#plot
ggplot(lepdata, aes(x = log(ECV_OB)/log(ECV_T), y = log(SeP)*log(SeT))) + geom_point()
require(ggplot)
require(ggplot2)
#plot
ggplot(lepdata, aes(x = log(ECV_OB)/log(ECV_T), y = log(SeP)*log(SeT))) + geom_point()
#plot
ggplot(lepdata, aes(x = res.ob, y = log(SeP)*log(SeT))) + geom_point()
#plot
ggplot(lepdata, aes(x = res.ob, y = log(SeP)) + geom_point()
#plot
ggplot(lepdata, aes(x = res.ob, y = log(SeP))) + geom_point()
#or
p <- plot_ly(lepdata, x = ~log(ECV_OB)/log(ECV_T), y = ~log(SeT), z = ~log(AdultBodyMass), color = ~Activity, colors = c('#BF382A', '#0C4B8E')) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'RelBrain'),
yaxis = list(title = 'SeT'),
zaxis = list(title = 'BodyMass')))
DataCA=data.frame(lepdata$ECV_OB, lepdata$SeT, lepdata$SeP, lepdata$AdultBodyMass)
Lm_CA=lm(lepdata.ECV_OB ~ (lepdata.SeT+lepdata.SeP)*lepdata.AdultBodyMass, data=DataCA)
vif(Lm_CA) # low vifs
Lm_CA=lm(lepdata$ECV_OB ~ (lepdata.SeT+lepdata.SeP)*lepdata.AdultBodyMass, data=DataCA)
#or disregarding body size
Lm_CA=lm(lepdata.ECV_OB ~ lepdata.SeT+lepdata.SeP, data=DataCA)
vif(Lm_CA) # low vifs
Lm_CA=lm(lepdata$ECV_OB ~ (lepdata.SeT+lepdata.SeP)*lepdata.AdultBodyMass, data=DataCA)
vif(Lm_CA) # low vifs
Lm_CA=lm(lepdata$ECV_OB ~ (lepdata$SeT+lepdata$SeP)*lepdata$AdultBodyMass, data=DataCA)
Lm_CA=lm(log(lepdata.ECV_OB) ~ (log(lepdata.SeT)+log(lepdata.SeP)*log(lepdata.AdultBodyMass), data=DataCA)
Lm_CA=lm(log(lepdata.ECV_OB) ~ (log(lepdata.SeT)+log(lepdata.SeP))*log(lepdata.AdultBodyMass), data=DataCA)
vif(Lm_CA) # low vifs
DataCA=data.frame(lepdata$res.ob, lepdata$SeT, lepdata$SeP, lepdata$AdultBodyMass)
DataCA=data.frame(res.ob, lepdata$SeT, lepdata$SeP, lepdata$AdultBodyMass)
Lm_CA=lm(res.ob ~ lepdata.SeP*lepdata.AdultBodyMass, data=DataCA)
vif(Lm_CA) # low vifs
cor.test(lepdata$SeT, lepdata$SeP) #low cross correlation between SeT & SeP
leptree <-read.nexus("Matthee.nex")
model.Se2<-pgls(res.ob ~ log(SeP)*log(SeT), data = leporid, lambda='ML')
summary(model.Se2)
#or
leptree <-read.tree("leptree.txt")
model.Se2<-pgls(res.ob ~ log(SeP)*log(SeT), data = leporid, lambda='ML')
summary(model.Se2)
model.Se2<-pgls(res.ob ~ log(SeT), data = leporid, lambda='ML')
summary(model.Se2)
model.Se2<-pgls(res.ob ~ log(SeP), data = leporid, lambda='ML')
summary(model.Se2)
leptree <-read.nexus("Matthee.nex")
leporid <- comparative.data(phy = leptree, data = lepdata, names.col = Name_phyl, vcv = TRUE, na.omit = FALSE, warn.dropped = TRUE)
#for OB rel to T
model.pgls.res.ob <- pgls(log(ECV_OB) ~ log(ECV_T), data = leporid, lambda='ML')
res.ob <- model.pgls.res.ob$res
model.Se2<-pgls(res.ob ~ log(SeP), data = leporid, lambda='ML')
summary(model.Se2)
model.Se2<-pgls(res.ob ~ log(SeT), data = leporid, lambda='ML')
summary(model.Se2)
model.Se2<-pgls(res.ob ~ log(SeP), data = leporid, lambda='ML')
summary(model.Se2)
