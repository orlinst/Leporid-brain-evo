for(column in 1:8) {
percentage_above_zero <- length(which(solX[,column] >= 0))/length(solX[,column])
hdr.den(solX[,column], main = names(solX[column]), sub = paste0(round(percentage_above_zero*100,2), "% above zero"))
abline(v = 0, lty = 1)
}
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
dens.plot <- plot()
for(column in 1:8) {
percentage_above_zero <- length(which(solX[,column] >= 0))/length(solX[,column])
hdr.den(solX[,column], main = names(solX[column]), sub = paste0(round(percentage_above_zero*100,2), "% above zero"))
abline(v = 0, lty = 1)
}
dev.off()
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
dens.plot <- plot()
for(column in 1:8) {
percentage_above_zero <- length(which(solX[,column] >= 0))/length(solX[,column])
hdr.den(solX[,column], main = names(solX[column]), sub = paste0(round(percentage_above_zero*100,2), "% above zero"))
abline(v = 0, lty = 1)
}
dev.off()
dens.plot <- plot()
for(column in 1:8) {
percentage_above_zero <- length(which(solX[,column] >= 0))/length(solX[,column])
hdr.den(solX[,column], main = names(solX[column]), sub = paste0(round(percentage_above_zero*100,2), "% above zero"))
abline(v = 0, lty = 1)
}
names <- colnames(solX)
colnames(solX) <- names
View(solX)
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
dens.plot <- plot()
dens.plot <- plot()
solX <- as.data.frame(SolX)
solX <- as.data.frame(solX)
View(solX)
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
dens.plot <- plot()
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
dens.plot <- plot()
for(column in 1:8) {
percentage_above_zero <- length(which(solX[,column] >= 0))/length(solX[,column])
hdr.den(solX[,column], main = names(solX[column]), sub = paste0(round(percentage_above_zero*100,2), "% above zero"))
abline(v = 0, lty = 1)
}
dev.off()
dens.plot <- plot()
for(column in 1:8) {
percentage_above_zero <- length(which(solX[,column] >= 0))/length(solX[,column])
hdr.den(solX[,column], main = names(solX[column]), sub = paste0(round(percentage_above_zero*100,2), "% above zero"))
abline(v = 0, lty = 1)
}
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
dens.plot <- plot()
dev,off()
dev.off()
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
dens.plot <- plot()
dev.off()
dev.off()
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
dens.plot <- plot()
for(column in 1:15) {
percentage_above_zero <- length(which(solX[,column] >= 0))/length(solX[,column])
hdr.den(solX[,column], main = names(solX[column]), sub = paste0(round(percentage_above_zero*100,2), "% above zero"))
abline(v = 0, lty = 1)
}
dev.off()
View(res.plot)
summary(res.plot)
res.plot <- summary(res.plot)
res.plot <- as.data.frame(res.plot)
View(res.plot)
res.plot <- as.data.frame(one_model1$Sol)
read.mulTree("model1", convergence = TRUE)
read.mulTree("./MCMCmodels/model1", convergence = TRUE)
setwd("C:/Users/uqotodor_local/Dropbox/05. Github/Leporid-brain-evo/MCMCmodels")
read.mulTree("./MCMCmodels/model1", convergence = TRUE)
read.mulTree("./MCMCmodels/model1", convergence = TRUE)
read.mulTree("model1", convergence = TRUE)
all_models <- read.mulTree("model1")
summarised_results <- summary("model1", use.hdr = TRUE, cent.tend = mean,
prob = c(75, 25))
plot(summarised_results, horizontal = TRUE, ylab = "", cex.coeff = 0.8,
main = "Posterior distributions", cex.terms = 0.5,
terms = c("Intercept", "Body Mass", "Volancy", "Phylogeny", "Residuals"),
col = "grey", cex.main = 0.8)
plot(summarised_results, horizontal = TRUE, ylab = "", cex.coeff = 1,
main = "Posterior distributions", cex.terms = 0.5,
terms = c("Intercept", "Body Mass", "Volancy", "Phylogeny", "Residuals"),
col = "grey", cex.main = 0.8)
plot(summarised_results
)
mcmc_intervals(res.plot)
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
dens.plot <- plot()
pdf(file="density.pdf")
par( mfrow = c( 3, 3 ))
dens.plot <- plot()
setwd("./MCMCmodels")
one_model1 <- read.mulTree("model1-tree1_chain1", model = TRUE)
solX <- as.matrix(one_model1$Sol)
res.plot <- as.data.frame(one_model1$Sol)
setwd("./")
names <- colnames(solX)
colnames(solX) <- names
solX <- as.data.frame(solX)
#plot in a pdf
library(hdrcde)
pdf(file="density.pdf")
par( mfrow = c( 3, 3 ))
dens.plot <- plot()
#plot in a pdf
library(hdrcde)
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
dens.plot <- plot()
library(hdrcde)
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
dens.plot <- plot()
#plot in a pdf
library(hdrcde)
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
dens.plot <- plot()
View(solX)
dens.plot <- plot()
for(column in 1:15) {
percentage_above_zero <- length(which(solX[,column] >= 0))/length(solX[,column])
hdr.den(solX[,column], main = names(solX[column]), sub = paste0(round(percentage_above_zero*100,2), "% above zero"))
abline(v = 0, lty = 1)
}
#plot in a pdf
library(hdrcde)
pdf(file="./MCMCmodels/density.pdf")
dens.plot <- plot()
#plot in a pdf
library(hdrcde)
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
dens.plot <- plot()
#plot in a pdf
library(hdrcde)
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
dens.plot <- plot()
#plot in a pdf
library(hdrcde)
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
dens.plot <-
for(column in 1:8) {
percentage_above_zero <- length(which(solX[,column] >= 0))/length(solX[,column])
hdr.den(solX[,column], main = names(solX[column]), sub = paste0(round(percentage_above_zero*100,2), "% above zero"))
abline(v = 0, lty = 1)
}
color_scheme_set("brightblue")
mcmc_intervals(res.plot)
dev.off()
#plot in a pdf
library(hdrcde)
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
dens.plot <- plot()
#plot in a pdf
library(hdrcde)
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
dens.plot <- plot.default()
#plot in a pdf
library(hdrcde)
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
dens.plot <- plot.hdrcde()
#plot in a pdf
library(hdrcde)
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
dens.plot <- plot.hdrconf
#plot in a pdf
library(hdrcde)
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
dens.plot <- plot.hdr2d()
#plot in a pdf
library(hdrcde)
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
dens.plot <- plot.hdrconf()
View(solX)
par( mfrow = c( 3, 3 ))
dens.plot <- plot.hdrconf()
for(column in 1:8) {
percentage_above_zero <- length(which(solX[,column] >= 0))/length(solX[,column])
hdr.den(solX[,column], main = names(solX[column]), sub = paste0(round(percentage_above_zero*100,2), "% above zero"))
abline(v = 0, lty = 1)
}
par( mfrow = c( 3, 3 ))
dens.plot <- plot.hdrconf()
for(column in 1:8) {
percentage_above_zero <- length(which(solX[,column] >= 0))/length(solX[,column])
hdr.den(solX[,column], main = names(solX[column]), sub = paste0(round(percentage_above_zero*100,2), "% above zero"))
abline(v = 0, lty = 1)
}
par( mfrow = c( 3, 3 ))
dens.plot <- plot.hdrconf()
for(column in 1:8) {
percentage_above_zero <- length(which(solX[,column] >= 0))/length(solX[,column])
hdr.den(solX[,column], main = names(solX[column]), sub = paste0(round(percentage_above_zero*100,2), "% above zero"))
abline(v = 0, lty = 1)
}
par( mfrow = c( 3, 3 ))
dens.plot <- plot()
for(column in 1:8) {
percentage_above_zero <- length(which(solX[,column] >= 0))/length(solX[,column])
hdr.den(solX[,column], main = names(solX[column]), sub = paste0(round(percentage_above_zero*100,2), "% above zero"))
abline(v = 0, lty = 1)
}
#plot in a pdf
library(hdrcde)
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
plot()
#plot in a pdf
library(hdrcde)
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
for(column in 1:8) {
percentage_above_zero <- length(which(solX[,column] >= 0))/length(solX[,column])
hdr.den(solX[,column], main = names(solX[column]), sub = paste0(round(percentage_above_zero*100,2), "% above zero"))
abline(v = 0, lty = 1)
}
color_scheme_set("brightblue")
mcmc_intervals(res.plot)
dev.off()
write.table(summary(solX), "./MCMCmodels/analysis-output.csv", sep = ",", col.names = TRUE, row.names = TRUE)
solX
solX$statistics
summary(solX)
sum <- summary(solX)
solX$statisitics
sum$statistics
sum <- one_model1$Sol
sum <- as.mcmc(one_model1$Sol)
sumsol <- as.data.frame(sum$statistics)
solX <- as.mcmc(one_model1$Sol)
sum <- summary(solX)
sumsol <- as.data.frame(sum$statistics)
View(sumsol)
write.table(summary(sum), "./MCMCmodels/analysis-output.csv", sep = ",", col.names = TRUE, row.names = TRUE)
View(sum)
View(sum)
sum <- as.data.frame(sum$statistics)
View(sum)
write.table(sum, "./MCMCmodels/analysis-output.csv", sep = ",", col.names = TRUE, row.names = TRUE)
View(sum)
View(sum)
p <- ggplot(
sum,
aes(x = Mean, y = fct_rev(row.names(sum)), xmin = Mean-SD, xmax = Mean+SD)) +
geom_point(aes(color = row.names(sum))) +
geom_errorbarh(aes(color = row.names(sum)), height=0.05)+
geom_vline(xintercept = 0, color = "red", linetype="longdash", size=0.5) +
theme_light()
p$labels$colour <- "Model"
p$labels$x <- "Posterior estimate + SE"
p$labels$y <- "Model parameters"
p
#plot in a pdf
library(hdrcde)
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
for(column in 1:8) {
percentage_above_zero <- length(which(solX[,column] >= 0))/length(solX[,column])
hdr.den(solX[,column], main = names(solX[column]), sub = paste0(round(percentage_above_zero*100,2), "% above zero"))
abline(v = 0, lty = 1)
}
color_scheme_set("brightblue")
mcmc_intervals(res.plot)
p <- ggplot(
sum,
aes(x = Mean, y = fct_rev(row.names(sum)), xmin = Mean-SD, xmax = Mean+SD)) +
geom_point(aes(color = row.names(sum))) +
geom_errorbarh(aes(color = row.names(sum)), height=0.05)+
geom_vline(xintercept = 0, color = "red", linetype="longdash", size=0.5) +
theme_light()
p$labels$colour <- "Model"
p$labels$x <- "Posterior estimate + SD"
p$labels$y <- "Model parameters"
p
dev.off()
solX <- as.mcmc(one_model1$Sol)
sum <- summary(solX)
sum <- as.data.frame(sum$statistics)
write.table(sum, "./MCMCmodels/analysis-output.csv", sep = ",", col.names = TRUE, row.names = TRUE)
View(sum)
#plot in a pdf
library(hdrcde)
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
for(column in 1:8) {
percentage_above_zero <- length(which(solX[,column] >= 0))/length(solX[,column])
hdr.den(solX[,column], main = names(solX[column]), sub = paste0(round(percentage_above_zero*100,2), "% above zero"))
abline(v = 0, lty = 1)
}
color_scheme_set("brightblue")
mcmc_intervals(res.plot)
p <- ggplot(
sum,
aes(x = Mean, y = fct_rev(row.names(sum)), xmin = Mean-SD, xmax = Mean+SD)) +
geom_point(aes(color = row.names(sum))) +
geom_errorbarh(aes(color = row.names(sum)), height=0.05)+
geom_vline(xintercept = 0, color = "red", linetype="longdash", size=0.5) +
theme_light()
p$labels$colour <- "Model"
p$labels$x <- "Posterior estimate + SD"
p$labels$y <- "Model parameters"
p
dev.off()
solX <- as.mcmc(one_model1$Sol)
sum <- summary(solX)
sum <- as.data.frame(sum$statistics)
write.table(sum, "./MCMCmodels/analysis-output.csv", sep = ",", col.names = TRUE, row.names = TRUE)
#plot in a pdf
library(hdrcde)
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
for(column in 1:8) {
percentage_above_zero <- length(which(solX[,column] >= 0))/length(solX[,column])
hdr.den(solX[,column], main = names(solX[column]), sub = paste0(round(percentage_above_zero*100,2), "% above zero"))
abline(v = 0, lty = 1)
}
color_scheme_set("brightblue")
mcmc_intervals(res.plot)
p <- ggplot(
sum,
aes(x = Mean, y = fct_rev(row.names(sum)), xmin = Mean-SD, xmax = Mean+SD)) +
geom_point(aes(color = row.names(sum))) +
geom_errorbarh(aes(color = row.names(sum)), height=0.05)+
geom_vline(xintercept = 0, color = "red", linetype="longdash", size=0.5) +
theme_light()
p$labels$colour <- "Model"
p$labels$x <- "Posterior estimate + SD"
p$labels$y <- "Model parameters"
p
dev.off()
solX <- as.mcmc(one_model1$Sol)
sum <- summary(solX)
sum <- as.data.frame(sum$statistics)
write.table(sum, "./MCMCmodels/analysis-output.csv", sep = ",", col.names = TRUE, row.names = TRUE)
names <- colnames(solX)
colnames(solX) <- names
solX <- as.data.frame(solX)
#plot in a pdf
library(hdrcde)
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
for(column in 1:8) {
percentage_above_zero <- length(which(solX[,column] >= 0))/length(solX[,column])
hdr.den(solX[,column], main = names(solX[column]), sub = paste0(round(percentage_above_zero*100,2), "% above zero"))
abline(v = 0, lty = 1)
}
color_scheme_set("brightblue")
mcmc_intervals(res.plot)
p <- ggplot(
sum,
aes(x = Mean, y = fct_rev(row.names(sum)), xmin = Mean-SD, xmax = Mean+SD)) +
geom_point(aes(color = row.names(sum))) +
geom_errorbarh(aes(color = row.names(sum)), height=0.05)+
geom_vline(xintercept = 0, color = "red", linetype="longdash", size=0.5) +
theme_light()
p$labels$colour <- "Model"
p$labels$x <- "Posterior estimate + SD"
p$labels$y <- "Model parameters"
p
dev.off()
solX <- as.mcmc(one_model1$Sol)
sum <- summary(solX)
sum <- as.data.frame(sum$statistics)
write.table(sum, "./MCMCmodels/analysis-output.csv", sep = ",", col.names = TRUE, row.names = TRUE)
require(caper)
require(car)
require(plotly)
require(ggplot2)
library(MCMCglmm)
library(mulTree)
require(phytools)
require(forcats)
require(bayesplot)
library(hdrcde)
lep.data <-read.table("./Data/lepdata_trimmed2.txt", sep = "\t", header = TRUE)
lep.tree <-read.tree("./Data/leptree.txt")
#convert var types
lep.data$DietBreadth <- as.numeric(lep.data$DietBreadth)
lep.data$Burrow < as.numeric(lep.data$DietBurrow)
lep.data$ECV_T <- log(lep.data$ECV_T)
lep.data$ECV_OB <- log(lep.data$ECV_OB)
lep.data$ECV_ROB <- log(lep.data$ECV_ROB)
lep.data$AdultBodyMass <- log(lep.data$AdultBodyMass)
lep.data$GestationLen <- log(lep.data$GestationLen)
lep.data$HomeRange <- log(lep.data$HomeRange)
lep.data$LitterSize <- log(lep.data$LitterSize)
lep.data$GR_Area <- log(lep.data$GR_Area)
#set row names and check for missingness
rownames(lep.data) <- lep.data$Name_phyl
clean.data(lep.data, lep.tree)  ## check if data == tree names
lep.tree$edge.length[which(lep.tree$edge.length == 0)] <- 0.01*median(lep.tree$edge.length[-which(lep.tree$edge.length == 0)])
lep.tree <- force.ultrametric(lep.tree,method="extend")
formula1 <- ECV_T ~ SeT * SeP * AdultBodyMass
formula2 <- ECV_OB ~ SeT * SeP * AdultBodyMass
formula3 <- ECV_ROB ~ SeT * SeP * AdultBodyMass
formula1a <- ECV_T ~ SeT * SeP * Burrow * Locomotor_Mode * Activity * AdultBodyMass
formula2a <- ECV_OB ~ SeT * SeP * Burrow * Locomotor_Mode * Activity * AdultBodyMass
formula3a <- ECV_ROB ~ SeT * SeP * Burrow * Locomotor_Mode * Activity * AdultBodyMass
formula1b <- ECV_T ~ SeT * SeP * DietBreadth * GR_Area * AdultBodyMass
formula2b <- ECV_OB ~ SeT * SeP * DietBreadth * GR_Area * AdultBodyMass
formula3b <- ECV_ROB ~ SeT * SeP * DietBreadth * GR_Area * AdultBodyMass
formula1c <- ECV_T ~ SeT * SeP * GestationLen * LitterSize * AdultBodyMass
formula2c <- ECV_OB ~ SeT * SeP * GestationLen * LitterSize * AdultBodyMass
formula3c <- ECV_ROB ~ SeT * SeP * GestationLen * LitterSize * AdultBodyMass
# Number of interations
nitt <- 250000
# Length of burnin -> what to ignore (the initial N ot iterations)
burnin <- 30000
# Amount of thinning -> lenght of step (sampling rate)
thin <- 101
mulTree_data <- as.mulTree(data = lep.data, tree = lep.tree,
taxa = "Name_phyl")
# The formula
mul_formula <- formula2
# The MCMC parameters (iterations, thining, burnin)
mul_parameters <- c(nitt, thin, burnin)
# The MCMCglmm priors
mul_priors <- list(R = list(V = 1, nu = 0.002),
G = list(G1 = list(V = 1, nu = 0.002)))
mulTree(mulTree.data = mulTree_data, formula = mul_formula, priors = mul_priors,
parameters = mul_parameters, output = "./MCMCmodels/model1", ESS = 1000,
chains = 2)
setwd("./MCMCmodels")
one_model1 <- read.mulTree("model1-tree1_chain1", model = TRUE)
solX <- as.matrix(one_model1$Sol)
res.plot <- as.data.frame(one_model1$Sol)
setwd("./")
names <- colnames(solX)
colnames(solX) <- names
solX <- as.data.frame(solX)
#plot in a pdf
library(hdrcde)
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
for(column in 1:8) {
percentage_above_zero <- length(which(solX[,column] >= 0))/length(solX[,column])
hdr.den(solX[,column], main = names(solX[column]), sub = paste0(round(percentage_above_zero*100,2), "% above zero"))
abline(v = 0, lty = 1)
}
color_scheme_set("brightblue")
mcmc_intervals(res.plot)
p <- ggplot(
sum,
aes(x = Mean, y = fct_rev(row.names(sum)), xmin = Mean-SD, xmax = Mean+SD)) +
geom_point(aes(color = row.names(sum))) +
geom_errorbarh(aes(color = row.names(sum)), height=0.05)+
geom_vline(xintercept = 0, color = "red", linetype="longdash", size=0.5) +
theme_light()
sum <- summary(solX)
sum <- as.data.frame(sum$statistics)
sum <- as.mcmc(one_model1$Sol)
sum <- summary(solX)
sum <- as.data.frame(sum$statistics)
sum <- as.mcmc(one_model1$Sol)
View(solX)
sum <- as.mcmc(one_model1$Sol)
sum <- as.mcmc(one_model1$Sol)
sum <- summary(sum)
sum <- as.data.frame(sum$statistics)
#plot in a pdf
library(hdrcde)
pdf(file="./MCMCmodels/density.pdf")
par( mfrow = c( 3, 3 ))
for(column in 1:8) {
percentage_above_zero <- length(which(solX[,column] >= 0))/length(solX[,column])
hdr.den(solX[,column], main = names(solX[column]), sub = paste0(round(percentage_above_zero*100,2), "% above zero"))
abline(v = 0, lty = 1)
}
color_scheme_set("brightblue")
mcmc_intervals(res.plot)
p <- ggplot(
sum,
aes(x = Mean, y = fct_rev(row.names(sum)), xmin = Mean-SD, xmax = Mean+SD)) +
geom_point(aes(color = row.names(sum))) +
geom_errorbarh(aes(color = row.names(sum)), height=0.05)+
geom_vline(xintercept = 0, color = "red", linetype="longdash", size=0.5) +
theme_light()
p$labels$colour <- "Model"
p$labels$x <- "Posterior estimate + SD"
p$labels$y <- "Model parameters"
p
dev.off()
solX <- as.mcmc(one_model1$Sol)
sum <- summary(solX)
sum <- as.data.frame(sum$statistics)
write.table(sum, "./MCMCmodels/analysis-output.csv", sep = ",", col.names = TRUE, row.names = TRUE)
